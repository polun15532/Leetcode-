//找到n!中最尾端0的數量。
//最直觀的方法是計算n!並且針對每一位與10取餘數直到取餘數不為0後返回。
//但這樣的做法時間複雜度為O(n)
/*
int count=0;
while{k%10==0}{
  count++;
  k/=10;
}
*/
//這個題目是在求被10除過的次數，10=2*5因此我們只需要知道n!裡被多少個5與2乘過就可以了。
//對於n!中只要是偶數必定是2的倍數，因此其數量會比5多。此外計算存在多少5的倍數也很簡單只要n/5就夠了。
//而對於5^2,5^3,5^4等等是需要重複計數的，因為他們等於多個5相乘。
int trailingZeroes(int n) {
    int sum=0;
    while(n!=0){
        sum+=n/5;
        n/=5;
    }
    return sum;
}
時間複雜度 O(log n)
